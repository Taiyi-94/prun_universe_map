{"ast":null,"code":"var _jsxFileName = \"/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/components/UniverseMap.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { GraphContext } from '../contexts/GraphContext';\nimport { addMouseEvents } from '../utils/svgUtils';\nimport './UniverseMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UniverseMap = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    graph,\n    fetchGraphData\n  } = useContext(GraphContext);\n  _s(useEffect(_s(() => {\n    _s();\n    useFetchGraphData();\n  }, \"42yuwq0xFhqdeDD+MBpMdWLX5sw=\", true), [useFetchGraphData]), \"42yuwq0xFhqdeDD+MBpMdWLX5sw=\", true);\n  useEffect(() => {\n    let svgNode;\n    let zoom;\n    d3.xml('/PrUn_universe_map_normalized.svg').then(data => {\n      svgNode = data.documentElement;\n      const container = document.getElementById('map-container');\n\n      // Clear any existing SVG to prevent duplicates\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n\n      // Append the SVG node to the container\n      container.appendChild(svgNode);\n\n      // Select the SVG element and create a group element\n      const svg = d3.select(svgNode);\n      const g = svg.append('g');\n\n      // Move all children of the SVG to the group\n      while (svgNode.firstChild && svgNode.firstChild !== g.node()) {\n        g.node().appendChild(svgNode.firstChild);\n      }\n      zoom = d3.zoom().scaleExtent([1, 20]) // Set the minimum and maximum zoom scales\n      .on('zoom', event => {\n        g.attr('transform', event.transform);\n      });\n      svg.call(zoom);\n\n      // Add mouse events for nodes\n      addMouseEvents(g);\n    });\n    return () => {\n      if (svgNode) {\n        const container = document.getElementById('map-container');\n        if (container.contains(svgNode)) {\n          container.removeChild(svgNode);\n        }\n      }\n    };\n  }, [graph]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"info-panel\",\n      className: \"info-panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(UniverseMap, \"dPHgKGAdIyIdtS+GqqsozXngAsc=\");\n_c = UniverseMap;\nexport default UniverseMap;\nvar _c;\n$RefreshReg$(_c, \"UniverseMap\");","map":{"version":3,"names":["React","useEffect","useContext","d3","GraphContext","addMouseEvents","jsxDEV","_jsxDEV","UniverseMap","_s2","_s","$RefreshSig$","graph","fetchGraphData","useFetchGraphData","svgNode","zoom","xml","then","data","documentElement","container","document","getElementById","firstChild","removeChild","appendChild","svg","select","g","append","node","scaleExtent","on","event","attr","transform","call","contains","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/components/UniverseMap.jsx"],"sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { GraphContext } from '../contexts/GraphContext';\nimport { addMouseEvents } from '../utils/svgUtils';\nimport './UniverseMap.css';\n\nconst UniverseMap = () => {\n  const { graph, fetchGraphData } = useContext(GraphContext);\n\n  useEffect(() => {\n    useFetchGraphData();\n  }, [useFetchGraphData]);\n\n  useEffect(() => {\n    let svgNode;\n    let zoom;\n\n    d3.xml('/PrUn_universe_map_normalized.svg').then(data => {\n      svgNode = data.documentElement;\n      const container = document.getElementById('map-container');\n\n      // Clear any existing SVG to prevent duplicates\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n\n      // Append the SVG node to the container\n      container.appendChild(svgNode);\n\n      // Select the SVG element and create a group element\n      const svg = d3.select(svgNode);\n      const g = svg.append('g');\n\n      // Move all children of the SVG to the group\n      while (svgNode.firstChild && svgNode.firstChild !== g.node()) {\n        g.node().appendChild(svgNode.firstChild);\n      }\n\n      zoom = d3.zoom()\n        .scaleExtent([1, 20]) // Set the minimum and maximum zoom scales\n        .on('zoom', (event) => {\n          g.attr('transform', event.transform);\n        });\n\n      svg.call(zoom);\n\n      // Add mouse events for nodes\n      addMouseEvents(g);\n\n    });\n\n    return () => {\n      if (svgNode) {\n        const container = document.getElementById('map-container');\n        if (container.contains(svgNode)) {\n          container.removeChild(svgNode);\n        }\n      }\n    };\n  }, [graph]);\n\n  return (\n    <div id=\"map-container\">\n      <div id=\"info-panel\" className=\"info-panel\"></div>\n    </div>\n  );\n};\n\nexport default UniverseMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxB,MAAM;IAAEC,KAAK;IAAEC;EAAe,CAAC,GAAGX,UAAU,CAACE,YAAY,CAAC;EAE1DM,EAAA,CAAAT,SAAS,CAAAS,EAAA,CAAC,MAAM;IAAAA,EAAA;IACdI,iBAAiB,CAAC,CAAC;EACrB,CAAC,yCAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvBb,SAAS,CAAC,MAAM;IACd,IAAIc,OAAO;IACX,IAAIC,IAAI;IAERb,EAAE,CAACc,GAAG,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;MACvDJ,OAAO,GAAGI,IAAI,CAACC,eAAe;MAC9B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;;MAE1D;MACA,OAAOF,SAAS,CAACG,UAAU,EAAE;QAC3BH,SAAS,CAACI,WAAW,CAACJ,SAAS,CAACG,UAAU,CAAC;MAC7C;;MAEA;MACAH,SAAS,CAACK,WAAW,CAACX,OAAO,CAAC;;MAE9B;MACA,MAAMY,GAAG,GAAGxB,EAAE,CAACyB,MAAM,CAACb,OAAO,CAAC;MAC9B,MAAMc,CAAC,GAAGF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC;;MAEzB;MACA,OAAOf,OAAO,CAACS,UAAU,IAAIT,OAAO,CAACS,UAAU,KAAKK,CAAC,CAACE,IAAI,CAAC,CAAC,EAAE;QAC5DF,CAAC,CAACE,IAAI,CAAC,CAAC,CAACL,WAAW,CAACX,OAAO,CAACS,UAAU,CAAC;MAC1C;MAEAR,IAAI,GAAGb,EAAE,CAACa,IAAI,CAAC,CAAC,CACbgB,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAAA,CACrBC,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;QACrBL,CAAC,CAACM,IAAI,CAAC,WAAW,EAAED,KAAK,CAACE,SAAS,CAAC;MACtC,CAAC,CAAC;MAEJT,GAAG,CAACU,IAAI,CAACrB,IAAI,CAAC;;MAEd;MACAX,cAAc,CAACwB,CAAC,CAAC;IAEnB,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAId,OAAO,EAAE;QACX,MAAMM,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;QAC1D,IAAIF,SAAS,CAACiB,QAAQ,CAACvB,OAAO,CAAC,EAAE;UAC/BM,SAAS,CAACI,WAAW,CAACV,OAAO,CAAC;QAChC;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA;IAAKgC,EAAE,EAAC,eAAe;IAAAC,QAAA,eACrBjC,OAAA;MAAKgC,EAAE,EAAC,YAAY;MAACE,SAAS,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACpC,GAAA,CA5DID,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}