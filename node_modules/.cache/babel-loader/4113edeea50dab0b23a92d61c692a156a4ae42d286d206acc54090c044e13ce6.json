{"ast":null,"code":"var _jsxFileName = \"/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/contexts/GraphContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useCallback } from 'react';\nimport { findShortestPath as findShortestPathUtil, highlightPath } from '../utils/graphUtils';\nimport { useFetchGraphData } from '../hooks/useFetchGraphData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GraphContext = /*#__PURE__*/createContext();\nexport const GraphProvider = ({\n  children\n}) => {\n  _s();\n  const [graph, setGraph] = useState({\n    nodes: {},\n    edges: []\n  });\n  const [selectedSystems, setSelectedSystems] = useState([]);\n  useFetchGraphData(); // Fetch graph data when the provider is mounted\n\n  const findShortestPath = useCallback((system1, system2) => {\n    findShortestPathUtil(graph, system1, system2, highlightPath);\n  }, [graph]);\n  console.log('GraphProvider rendering with graph:', graph);\n  return /*#__PURE__*/_jsxDEV(GraphContext.Provider, {\n    value: {\n      graph,\n      setGraph,\n      selectedSystems,\n      setSelectedSystems,\n      findShortestPath\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphProvider, \"6as+ctWhDAnQsgefdwZ4JR5CBz0=\", false, function () {\n  return [useFetchGraphData];\n});\n_c = GraphProvider;\nvar _c;\n$RefreshReg$(_c, \"GraphProvider\");","map":{"version":3,"names":["React","createContext","useState","useCallback","findShortestPath","findShortestPathUtil","highlightPath","useFetchGraphData","jsxDEV","_jsxDEV","GraphContext","GraphProvider","children","_s","graph","setGraph","nodes","edges","selectedSystems","setSelectedSystems","system1","system2","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/contexts/GraphContext.js"],"sourcesContent":["import React, { createContext, useState, useCallback } from 'react';\nimport { findShortestPath as findShortestPathUtil, highlightPath } from '../utils/graphUtils';\nimport { useFetchGraphData } from '../hooks/useFetchGraphData';\n\nexport const GraphContext = createContext();\n\nexport const GraphProvider = ({ children }) => {\n  const [graph, setGraph] = useState({ nodes: {}, edges: [] });\n  const [selectedSystems, setSelectedSystems] = useState([]);\n\n  useFetchGraphData(); // Fetch graph data when the provider is mounted\n\n  const findShortestPath = useCallback((system1, system2) => {\n    findShortestPathUtil(graph, system1, system2, highlightPath);\n  }, [graph]);\n\n  console.log('GraphProvider rendering with graph:', graph);\n\n  return (\n    <GraphContext.Provider value={{ graph, setGraph, selectedSystems, setSelectedSystems, findShortestPath }}>\n      {children}\n    </GraphContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACnE,SAASC,gBAAgB,IAAIC,oBAAoB,EAAEC,aAAa,QAAQ,qBAAqB;AAC7F,SAASC,iBAAiB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,OAAO,MAAMC,YAAY,gBAAGT,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMU,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IAAEc,KAAK,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC5D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1DK,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAErB,MAAMH,gBAAgB,GAAGD,WAAW,CAAC,CAACiB,OAAO,EAAEC,OAAO,KAAK;IACzDhB,oBAAoB,CAACS,KAAK,EAAEM,OAAO,EAAEC,OAAO,EAAEf,aAAa,CAAC;EAC9D,CAAC,EAAE,CAACQ,KAAK,CAAC,CAAC;EAEXQ,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAET,KAAK,CAAC;EAEzD,oBACEL,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEC,QAAQ;MAAEG,eAAe;MAAEC,kBAAkB;MAAEf;IAAiB,CAAE;IAAAQ,QAAA,EACtGA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChB,EAAA,CAjBWF,aAAa;EAAA,QAIxBJ,iBAAiB;AAAA;AAAAuB,EAAA,GAJNnB,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}