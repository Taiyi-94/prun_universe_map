{"ast":null,"code":"import * as d3 from 'd3';\nimport { colors } from '../config/config';\nlet universeData = null;\nlet planetData = null;\n\n// Function to fetch and process the universe and planet data\nconst fetchData = async () => {\n  try {\n    const [universeResponse, planetResponse] = await Promise.all([fetch('/prun_universe_data.json'), fetch('/planet_data.json')]);\n    const universeJson = await universeResponse.json();\n    const planetJson = await planetResponse.json();\n    universeData = Object.fromEntries(universeJson.map(system => [system.SystemId, system]));\n\n    // Group planets by SystemId\n    planetData = planetJson.reduce((acc, planet) => {\n      if (!acc[planet.SystemId]) {\n        acc[planet.SystemId] = [];\n      }\n      acc[planet.SystemId].push(planet);\n      return acc;\n    }, {});\n    console.log('Universe and planet data loaded');\n  } catch (error) {\n    console.error('Error loading data:', error);\n  }\n};\n\n// Call this function when the application initializes\nfetchData();\n\n// Function to normalize the style attribute\nexport const normalizeElementStyles = element => {\n  const style = element.attrib.get('style', '');\n  const styleDict = Object.fromEntries(style.split(';').filter(Boolean).map(item => item.split(':').map(str => str.trim())));\n  for (const [key, value] of Object.entries(styleDict)) {\n    element.setAttribute(key, value);\n  }\n  element.removeAttribute('style');\n};\n\n// Function to format population size\nconst formatPopulation = size => {\n  if (size >= 1e9) return (size / 1e9).toFixed(2) + 'B';\n  if (size >= 1e6) return (size / 1e6).toFixed(2) + 'M';\n  if (size >= 1e3) return (size / 1e3).toFixed(2) + 'K';\n  return size.toString();\n};\n\n// Function to create and show the info panel\nconst showInfoPanel = (rect, x, y) => {\n  const systemId = rect.attr('id').replace('#', '');\n  const system = universeData ? universeData[systemId] : null;\n  const planets = planetData ? planetData[systemId] : null;\n  if (!system || !planets) {\n    console.error('System or planet data not found for:', systemId);\n    return;\n  }\n  const infoPanel = d3.select('body').append('div').attr('class', 'info-panel').style('left', `${x}px`).style('top', `${y}px`).style('display', 'block');\n  let content = `<h3>${system.Name} (${system.NaturalId})</h3>`;\n  content += `<p>Planets:</p><ul>`;\n  planets.forEach(planet => {\n    content += `<li>${planet.PlanetName} (${planet.PlanetNaturalId})`;\n    if (planet.PopulationId) {\n      content += ` - Pop: ${formatPopulation(parseInt(planet.PopulationId, 16))}`;\n    }\n    if (planet.COGCProgramStatus === \"ACTIVE\" && planet.COGCPrograms && planet.COGCPrograms.length > 0) {\n      content += `<br>CoGC: ${planet.COGCPrograms[0].ProgramType}`;\n    }\n    content += `</li>`;\n  });\n  content += `</ul>`;\n  infoPanel.html(content);\n};\n\n// Function to hide the info panel\nconst hideInfoPanel = () => {\n  d3.select('.info-panel').remove();\n};\n\n// Function to add mouseover and mouseout events for animation\nexport const addMouseEvents = g => {\n  g.selectAll('rect').each(function () {\n    const rect = d3.select(this);\n    const originalSize = {\n      width: +rect.attr('width'),\n      height: +rect.attr('height')\n    };\n    const originalPos = {\n      x: +rect.attr('x'),\n      y: +rect.attr('y')\n    };\n    let hoverTimer;\n    rect.on('mouseover', function (event) {\n      if (rect.attr('id') === 'rect1') return;\n      rect.attr('fill-opacity', 1).attr('stroke-opacity', 1).transition().duration(200).attr('width', originalSize.width * 2).attr('height', originalSize.height * 2).attr('x', originalPos.x - originalSize.width / 2).attr('y', originalPos.y - originalSize.height / 2);\n\n      // Set timer for info panel\n      hoverTimer = setTimeout(() => {\n        const [x, y] = d3.pointer(event);\n        showInfoPanel(rect, x, y);\n      }, 400);\n    }).on('mouseout', function () {\n      if (rect.attr('id') === 'rect1') return;\n      rect.transition().duration(200).attr('width', originalSize.width).attr('height', originalSize.height).attr('x', originalPos.x).attr('y', originalPos.y).attr('fill-opacity', colors.resetSystemFillOpacity);\n\n      // Clear timer and hide info panel\n      clearTimeout(hoverTimer);\n      hideInfoPanel();\n    });\n  });\n};","map":{"version":3,"names":["d3","colors","universeData","planetData","fetchData","universeResponse","planetResponse","Promise","all","fetch","universeJson","json","planetJson","Object","fromEntries","map","system","SystemId","reduce","acc","planet","push","console","log","error","normalizeElementStyles","element","style","attrib","get","styleDict","split","filter","Boolean","item","str","trim","key","value","entries","setAttribute","removeAttribute","formatPopulation","size","toFixed","toString","showInfoPanel","rect","x","y","systemId","attr","replace","planets","infoPanel","select","append","content","Name","NaturalId","forEach","PlanetName","PlanetNaturalId","PopulationId","parseInt","COGCProgramStatus","COGCPrograms","length","ProgramType","html","hideInfoPanel","remove","addMouseEvents","g","selectAll","each","originalSize","width","height","originalPos","hoverTimer","on","event","transition","duration","setTimeout","pointer","resetSystemFillOpacity","clearTimeout"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/utils/svgUtils.js"],"sourcesContent":["import * as d3 from 'd3';\nimport { colors } from '../config/config';\n\nlet universeData = null;\nlet planetData = null;\n\n// Function to fetch and process the universe and planet data\nconst fetchData = async () => {\n  try {\n    const [universeResponse, planetResponse] = await Promise.all([\n      fetch('/prun_universe_data.json'),\n      fetch('/planet_data.json')\n    ]);\n    const universeJson = await universeResponse.json();\n    const planetJson = await planetResponse.json();\n\n    universeData = Object.fromEntries(universeJson.map(system => [system.SystemId, system]));\n\n    // Group planets by SystemId\n    planetData = planetJson.reduce((acc, planet) => {\n      if (!acc[planet.SystemId]) {\n        acc[planet.SystemId] = [];\n      }\n      acc[planet.SystemId].push(planet);\n      return acc;\n    }, {});\n\n    console.log('Universe and planet data loaded');\n  } catch (error) {\n    console.error('Error loading data:', error);\n  }\n};\n\n// Call this function when the application initializes\nfetchData();\n\n// Function to normalize the style attribute\nexport const normalizeElementStyles = (element) => {\n  const style = element.attrib.get('style', '');\n  const styleDict = Object.fromEntries(style.split(';').filter(Boolean).map(item => item.split(':').map(str => str.trim())));\n\n  for (const [key, value] of Object.entries(styleDict)) {\n    element.setAttribute(key, value);\n  }\n\n  element.removeAttribute('style');\n};\n\n// Function to format population size\nconst formatPopulation = (size) => {\n  if (size >= 1e9) return (size / 1e9).toFixed(2) + 'B';\n  if (size >= 1e6) return (size / 1e6).toFixed(2) + 'M';\n  if (size >= 1e3) return (size / 1e3).toFixed(2) + 'K';\n  return size.toString();\n};\n\n// Function to create and show the info panel\nconst showInfoPanel = (rect, x, y) => {\n  const systemId = rect.attr('id').replace('#', '');\n  const system = universeData ? universeData[systemId] : null;\n  const planets = planetData ? planetData[systemId] : null;\n\n  if (!system || !planets) {\n    console.error('System or planet data not found for:', systemId);\n    return;\n  }\n\n  const infoPanel = d3.select('body').append('div')\n    .attr('class', 'info-panel')\n    .style('left', `${x}px`)\n    .style('top', `${y}px`)\n    .style('display', 'block');\n\n  let content = `<h3>${system.Name} (${system.NaturalId})</h3>`;\n  content += `<p>Planets:</p><ul>`;\n\n  planets.forEach(planet => {\n    content += `<li>${planet.PlanetName} (${planet.PlanetNaturalId})`;\n    if (planet.PopulationId) {\n      content += ` - Pop: ${formatPopulation(parseInt(planet.PopulationId, 16))}`;\n    }\n    if (planet.COGCProgramStatus === \"ACTIVE\" && planet.COGCPrograms && planet.COGCPrograms.length > 0) {\n      content += `<br>CoGC: ${planet.COGCPrograms[0].ProgramType}`;\n    }\n    content += `</li>`;\n  });\n\n  content += `</ul>`;\n  infoPanel.html(content);\n};\n\n// Function to hide the info panel\nconst hideInfoPanel = () => {\n  d3.select('.info-panel').remove();\n};\n\n// Function to add mouseover and mouseout events for animation\nexport const addMouseEvents = (g) => {\n  g.selectAll('rect').each(function() {\n    const rect = d3.select(this);\n    const originalSize = { width: +rect.attr('width'), height: +rect.attr('height') };\n    const originalPos = { x: +rect.attr('x'), y: +rect.attr('y') };\n    let hoverTimer;\n\n    rect.on('mouseover', function(event) {\n      if (rect.attr('id') === 'rect1') return;\n      rect\n        .attr('fill-opacity', 1)\n        .attr('stroke-opacity', 1)\n        .transition()\n        .duration(200)\n        .attr('width', originalSize.width * 2)\n        .attr('height', originalSize.height * 2)\n        .attr('x', originalPos.x - originalSize.width / 2)\n        .attr('y', originalPos.y - originalSize.height / 2);\n\n      // Set timer for info panel\n      hoverTimer = setTimeout(() => {\n        const [x, y] = d3.pointer(event);\n        showInfoPanel(rect, x, y);\n      }, 400);\n\n    }).on('mouseout', function() {\n      if (rect.attr('id') === 'rect1') return;\n      rect.transition()\n        .duration(200)\n        .attr('width', originalSize.width)\n        .attr('height', originalSize.height)\n        .attr('x', originalPos.x)\n        .attr('y', originalPos.y)\n        .attr('fill-opacity', colors.resetSystemFillOpacity);\n\n      // Clear timer and hide info panel\n      clearTimeout(hoverTimer);\n      hideInfoPanel();\n    });\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}