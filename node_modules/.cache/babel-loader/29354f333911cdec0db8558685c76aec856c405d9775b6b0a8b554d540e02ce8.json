{"ast":null,"code":"import * as d3 from 'd3';\nimport { colors } from '../config/config';\nlet universeData = null;\n\n// Function to fetch and process the universe data\nconst fetchUniverseData = async () => {\n  try {\n    const response = await fetch('/prun_universe_data.json');\n    const data = await response.json();\n    universeData = Object.fromEntries(data.map(system => [system.SystemId, system]));\n    console.log('Universe data loaded');\n  } catch (error) {\n    console.error('Error loading universe data:', error);\n  }\n};\n\n// Call this function when the application initializes\nfetchUniverseData();\n\n// Function to normalize the style attribute\nexport const normalizeElementStyles = element => {\n  const style = element.attrib.get('style', '');\n  const styleDict = Object.fromEntries(style.split(';').filter(Boolean).map(item => item.split(':').map(str => str.trim())));\n  for (const [key, value] of Object.entries(styleDict)) {\n    element.setAttribute(key, value);\n  }\n  element.removeAttribute('style');\n};\n\n// Function to create and show the info panel\nconst showInfoPanel = (rect, x, y) => {\n  const systemId = rect.attr('id').replace('#', '');\n  const system = universeData ? universeData[systemId] : null;\n  if (!system) {\n    console.error('System data not found for:', systemId);\n    return;\n  }\n  const infoPanel = d3.select('body').append('div').attr('class', 'info-panel').style('left', `${x}px`).style('top', `${y}px`).style('display', 'block');\n  infoPanel.html(`\n    <h3>${system.Name} (${system.NaturalId})</h3>\n    <p>Type: ${system.Type}</p>\n    <p>Sector: ${system.SectorId}</p>\n    <p>Sub-sector: ${system.SubSectorId}</p>\n    <p>Connections: ${system.Connections.length}</p>\n    <p>Position: (${system.PositionX.toFixed(2)}, ${system.PositionY.toFixed(2)}, ${system.PositionZ.toFixed(2)})</p>\n  `);\n};\n\n// Function to hide the info panel\nconst hideInfoPanel = () => {\n  d3.select('.info-panel').remove();\n};\n\n// Function to add mouseover and mouseout events for animation\nexport const addMouseEvents = g => {\n  g.selectAll('rect').each(function () {\n    const rect = d3.select(this);\n    const originalSize = {\n      width: +rect.attr('width'),\n      height: +rect.attr('height')\n    };\n    const originalPos = {\n      x: +rect.attr('x'),\n      y: +rect.attr('y')\n    };\n    let hoverTimer;\n    rect.on('mouseover', function (event) {\n      if (rect.attr('id') === 'rect1') return;\n      rect.attr('fill-opacity', 1).attr('stroke-opacity', 1).transition().duration(200).attr('width', originalSize.width * 2).attr('height', originalSize.height * 2).attr('x', originalPos.x - originalSize.width / 2).attr('y', originalPos.y - originalSize.height / 2);\n\n      // Set timer for info panel\n      hoverTimer = setTimeout(() => {\n        const [x, y] = d3.pointer(event);\n        showInfoPanel(rect, x, y);\n      }, 400); // Changed to 400ms as per your request\n    }).on('mouseout', function () {\n      if (rect.attr('id') === 'rect1') return;\n      rect.transition().duration(200).attr('width', originalSize.width).attr('height', originalSize.height).attr('x', originalPos.x).attr('y', originalPos.y).attr('fill-opacity', colors.resetSystemFillOpacity);\n\n      // Clear timer and hide info panel\n      clearTimeout(hoverTimer);\n      hideInfoPanel();\n    });\n  });\n};","map":{"version":3,"names":["d3","colors","universeData","fetchUniverseData","response","fetch","data","json","Object","fromEntries","map","system","SystemId","console","log","error","normalizeElementStyles","element","style","attrib","get","styleDict","split","filter","Boolean","item","str","trim","key","value","entries","setAttribute","removeAttribute","showInfoPanel","rect","x","y","systemId","attr","replace","infoPanel","select","append","html","Name","NaturalId","Type","SectorId","SubSectorId","Connections","length","PositionX","toFixed","PositionY","PositionZ","hideInfoPanel","remove","addMouseEvents","g","selectAll","each","originalSize","width","height","originalPos","hoverTimer","on","event","transition","duration","setTimeout","pointer","resetSystemFillOpacity","clearTimeout"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/utils/svgUtils.js"],"sourcesContent":["import * as d3 from 'd3';\nimport { colors } from '../config/config';\n\nlet universeData = null;\n\n// Function to fetch and process the universe data\nconst fetchUniverseData = async () => {\n  try {\n    const response = await fetch('/prun_universe_data.json');\n    const data = await response.json();\n    universeData = Object.fromEntries(data.map(system => [system.SystemId, system]));\n    console.log('Universe data loaded');\n  } catch (error) {\n    console.error('Error loading universe data:', error);\n  }\n};\n\n// Call this function when the application initializes\nfetchUniverseData();\n\n// Function to normalize the style attribute\nexport const normalizeElementStyles = (element) => {\n  const style = element.attrib.get('style', '');\n  const styleDict = Object.fromEntries(style.split(';').filter(Boolean).map(item => item.split(':').map(str => str.trim())));\n\n  for (const [key, value] of Object.entries(styleDict)) {\n    element.setAttribute(key, value);\n  }\n\n  element.removeAttribute('style');\n};\n\n// Function to create and show the info panel\nconst showInfoPanel = (rect, x, y) => {\n  const systemId = rect.attr('id').replace('#', '');\n  const system = universeData ? universeData[systemId] : null;\n\n  if (!system) {\n    console.error('System data not found for:', systemId);\n    return;\n  }\n\n  const infoPanel = d3.select('body').append('div')\n    .attr('class', 'info-panel')\n    .style('left', `${x}px`)\n    .style('top', `${y}px`)\n    .style('display', 'block');\n\n  infoPanel.html(`\n    <h3>${system.Name} (${system.NaturalId})</h3>\n    <p>Type: ${system.Type}</p>\n    <p>Sector: ${system.SectorId}</p>\n    <p>Sub-sector: ${system.SubSectorId}</p>\n    <p>Connections: ${system.Connections.length}</p>\n    <p>Position: (${system.PositionX.toFixed(2)}, ${system.PositionY.toFixed(2)}, ${system.PositionZ.toFixed(2)})</p>\n  `);\n};\n\n// Function to hide the info panel\nconst hideInfoPanel = () => {\n  d3.select('.info-panel').remove();\n};\n\n// Function to add mouseover and mouseout events for animation\nexport const addMouseEvents = (g) => {\n  g.selectAll('rect').each(function() {\n    const rect = d3.select(this);\n    const originalSize = { width: +rect.attr('width'), height: +rect.attr('height') };\n    const originalPos = { x: +rect.attr('x'), y: +rect.attr('y') };\n    let hoverTimer;\n\n    rect.on('mouseover', function(event) {\n      if (rect.attr('id') === 'rect1') return;\n      rect\n        .attr('fill-opacity', 1)\n        .attr('stroke-opacity', 1)\n        .transition()\n        .duration(200)\n        .attr('width', originalSize.width * 2)\n        .attr('height', originalSize.height * 2)\n        .attr('x', originalPos.x - originalSize.width / 2)\n        .attr('y', originalPos.y - originalSize.height / 2);\n\n      // Set timer for info panel\n      hoverTimer = setTimeout(() => {\n        const [x, y] = d3.pointer(event);\n        showInfoPanel(rect, x, y);\n      }, 400); // Changed to 400ms as per your request\n\n    }).on('mouseout', function() {\n      if (rect.attr('id') === 'rect1') return;\n      rect.transition()\n        .duration(200)\n        .attr('width', originalSize.width)\n        .attr('height', originalSize.height)\n        .attr('x', originalPos.x)\n        .attr('y', originalPos.y)\n        .attr('fill-opacity', colors.resetSystemFillOpacity);\n\n      // Clear timer and hide info panel\n      clearTimeout(hoverTimer);\n      hideInfoPanel();\n    });\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}