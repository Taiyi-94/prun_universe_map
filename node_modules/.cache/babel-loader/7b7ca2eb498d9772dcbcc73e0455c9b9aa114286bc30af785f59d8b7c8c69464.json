{"ast":null,"code":"var _jsxFileName = \"/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/contexts/SearchContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useCallback, useContext } from 'react';\nimport { GraphContext } from './GraphContext';\nimport { highlightSearchResults, clearHighlights } from '../utils/searchUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchContext = /*#__PURE__*/createContext();\nexport const SearchProvider = ({\n  children\n}) => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    universeData,\n    planetData\n  } = useContext(GraphContext);\n  const graphRef = React.useRef(null);\n  const handleSearch = useCallback(searchTerm => {\n    const results = [];\n    const terms = searchTerm.split(/\\s+/);\n    terms.forEach(term => {\n      // Search in systems\n      Object.entries(universeData).forEach(([systemId, systemArray]) => {\n        let system = systemArray[0];\n        if (system.Name.toLowerCase().includes(term.toLowerCase()) || system.NaturalId.toLowerCase().includes(term.toLowerCase())) {\n          results.push({\n            type: 'system',\n            id: systemId\n          });\n        }\n      });\n\n      // Search in planets\n      Object.entries(planetData).forEach(([systemId, planets]) => {\n        planets.forEach(planet => {\n          if (planet.PlanetName.toLowerCase().includes(term.toLowerCase()) || planet.PlanetNaturalId.toLowerCase().includes(term.toLowerCase())) {\n            results.push({\n              type: 'planet',\n              id: planet.PlanetNaturalId,\n              systemId: systemId\n            });\n          }\n        });\n      });\n    });\n    console.log('Terms', terms);\n    console.log('Results', results);\n    setSearchResults(results);\n    highlightSearchResults(graphRef, results);\n    return results;\n  }, [universeData, planetData]);\n  const clearSearch = useCallback(() => {\n    setSearchResults([]);\n    clearHighlights(graphRef);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      searchResults,\n      handleSearch,\n      clearSearch,\n      graphRef\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchProvider, \"6WiRUrRlMJDPkSP/PME/skl+Y3g=\");\n_c = SearchProvider;\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useState","useCallback","useContext","GraphContext","highlightSearchResults","clearHighlights","jsxDEV","_jsxDEV","SearchContext","SearchProvider","children","_s","searchResults","setSearchResults","universeData","planetData","graphRef","useRef","handleSearch","searchTerm","results","terms","split","forEach","term","Object","entries","systemId","systemArray","system","Name","toLowerCase","includes","NaturalId","push","type","id","planets","planet","PlanetName","PlanetNaturalId","console","log","clearSearch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/contexts/SearchContext.js"],"sourcesContent":["import React, { createContext, useState, useCallback, useContext } from 'react';\nimport { GraphContext } from './GraphContext';\nimport { highlightSearchResults, clearHighlights } from '../utils/searchUtils';\n\nexport const SearchContext = createContext();\n\nexport const SearchProvider = ({ children }) => {\n  const [searchResults, setSearchResults] = useState([]);\n  const { universeData, planetData } = useContext(GraphContext);\n  const graphRef = React.useRef(null);\n\n  const handleSearch = useCallback((searchTerm) => {\n    const results = [];\n    const terms = searchTerm.split(/\\s+/);\n\n    terms.forEach(term => {\n      // Search in systems\n      Object.entries(universeData).forEach(([systemId, systemArray]) => {\n      let system = systemArray[0]\n        if (system.Name.toLowerCase().includes(term.toLowerCase()) ||\n            system.NaturalId.toLowerCase().includes(term.toLowerCase())) {\n          results.push({ type: 'system', id: systemId });\n        }\n      });\n\n      // Search in planets\n      Object.entries(planetData).forEach(([systemId, planets]) => {\n        planets.forEach(planet => {\n          if (planet.PlanetName.toLowerCase().includes(term.toLowerCase()) ||\n              planet.PlanetNaturalId.toLowerCase().includes(term.toLowerCase())) {\n            results.push({ type: 'planet', id: planet.PlanetNaturalId, systemId: systemId });\n          }\n        });\n      });\n    });\n    console.log('Terms', terms)\n    console.log('Results', results)\n    setSearchResults(results);\n    highlightSearchResults(graphRef, results);\n    return results;\n  }, [universeData, planetData]);\n\n  const clearSearch = useCallback(() => {\n    setSearchResults([]);\n    clearHighlights(graphRef);\n  }, []);\n\n  return (\n    <SearchContext.Provider\n      value={{\n        searchResults,\n        handleSearch,\n        clearSearch,\n        graphRef\n      }}\n    >\n      {children}\n    </SearchContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}