{"ast":null,"code":"import * as d3 from 'd3';\nimport { resetGraphState } from '../utils/graphUtils';\nimport { colors } from '../config/config';\nexport const highlightSearchResults = (graphRef, searchResults) => {\n  if (searchResults.length > 0) {\n    // Reset all systems to default state\n    resetGraphState();\n\n    // Highlight systems from search results\n    searchResults.forEach(result => {\n      let highlightSystemNode = {};\n      if (result.type === 'system') {\n        highlightSystemNode = d3.select(`#${CSS.escape(result.id)}`);\n      } else if (result.type === 'planet') {\n        highlightSystemNode = d3.select(`#${CSS.escape(result.systemId)}`);\n      }\n      if (!highlightSystemNode.empty()) {\n        highlightSystemNode.attr('fill', colors.searchSystemFill).attr('stroke', colors.searchSystemStroke).attr('stroke-width', colors.searchSystemStrokeWidth);\n      }\n    });\n  }\n};\nexport const clearHighlights = graphRef => {\n  resetGraphState();\n};","map":{"version":3,"names":["d3","resetGraphState","colors","highlightSearchResults","graphRef","searchResults","length","forEach","result","highlightSystemNode","type","select","CSS","escape","id","systemId","empty","attr","searchSystemFill","searchSystemStroke","searchSystemStrokeWidth","clearHighlights"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/utils/searchUtils.js"],"sourcesContent":["import * as d3 from 'd3';\nimport { resetGraphState } from '../utils/graphUtils';\nimport { colors } from '../config/config';\n\nexport const highlightSearchResults = (graphRef, searchResults) => {\n  if (searchResults.length > 0) {\n\n    // Reset all systems to default state\n    resetGraphState();\n\n    // Highlight systems from search results\n    searchResults.forEach(result => {\n      let highlightSystemNode = {}\n      if (result.type === 'system') {\n        highlightSystemNode = d3.select(`#${CSS.escape(result.id)}`);\n      } else if (result.type === 'planet') {\n        highlightSystemNode = d3.select(`#${CSS.escape(result.systemId)}`);\n      }\n      if (!highlightSystemNode.empty()) {\n        highlightSystemNode\n          .attr('fill', colors.searchSystemFill)\n          .attr('stroke', colors.searchSystemStroke)\n          .attr('stroke-width', colors.searchSystemStrokeWidth);\n      }\n    });\n  }\n};\n\nexport const clearHighlights = (graphRef) => {\n  resetGraphState();\n};"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;AACxB,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,MAAM,QAAQ,kBAAkB;AAEzC,OAAO,MAAMC,sBAAsB,GAAGA,CAACC,QAAQ,EAAEC,aAAa,KAAK;EACjE,IAAIA,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;IAE5B;IACAL,eAAe,CAAC,CAAC;;IAEjB;IACAI,aAAa,CAACE,OAAO,CAACC,MAAM,IAAI;MAC9B,IAAIC,mBAAmB,GAAG,CAAC,CAAC;MAC5B,IAAID,MAAM,CAACE,IAAI,KAAK,QAAQ,EAAE;QAC5BD,mBAAmB,GAAGT,EAAE,CAACW,MAAM,CAAC,IAAIC,GAAG,CAACC,MAAM,CAACL,MAAM,CAACM,EAAE,CAAC,EAAE,CAAC;MAC9D,CAAC,MAAM,IAAIN,MAAM,CAACE,IAAI,KAAK,QAAQ,EAAE;QACnCD,mBAAmB,GAAGT,EAAE,CAACW,MAAM,CAAC,IAAIC,GAAG,CAACC,MAAM,CAACL,MAAM,CAACO,QAAQ,CAAC,EAAE,CAAC;MACpE;MACA,IAAI,CAACN,mBAAmB,CAACO,KAAK,CAAC,CAAC,EAAE;QAChCP,mBAAmB,CAChBQ,IAAI,CAAC,MAAM,EAAEf,MAAM,CAACgB,gBAAgB,CAAC,CACrCD,IAAI,CAAC,QAAQ,EAAEf,MAAM,CAACiB,kBAAkB,CAAC,CACzCF,IAAI,CAAC,cAAc,EAAEf,MAAM,CAACkB,uBAAuB,CAAC;MACzD;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIjB,QAAQ,IAAK;EAC3CH,eAAe,CAAC,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}