{"ast":null,"code":"import * as d3 from 'd3';\nimport { colors } from '../config/config';\nlet universeData = null;\nlet planetData = null;\n\n// Function to fetch and process the universe and planet data\nconst fetchData = async () => {\n  try {\n    const [universeResponse, planetResponse] = await Promise.all([fetch('/prun_universe_data.json'), fetch('/planet_data.json')]);\n    const universeJson = await universeResponse.json();\n    const planetJson = await planetResponse.json();\n    universeData = Object.fromEntries(universeJson.map(system => [system.SystemId, system]));\n\n    // Group planets by SystemId\n    planetData = planetJson.reduce((acc, planet) => {\n      if (!acc[planet.SystemId]) {\n        acc[planet.SystemId] = [];\n      }\n      acc[planet.SystemId].push(planet);\n      return acc;\n    }, {});\n    console.log('Universe and planet data loaded');\n  } catch (error) {\n    console.error('Error loading data:', error);\n  }\n};\n\n// Call this function when the application initializes\nfetchData();\n\n// Function to normalize the style attribute\nexport const normalizeElementStyles = element => {\n  const style = element.attrib.get('style', '');\n  const styleDict = Object.fromEntries(style.split(';').filter(Boolean).map(item => item.split(':').map(str => str.trim())));\n  for (const [key, value] of Object.entries(styleDict)) {\n    element.setAttribute(key, value);\n  }\n  element.removeAttribute('style');\n};\n\n// Function to create facility indicator\nconst createFacilityIndicator = (hasFeature, iconPlaceholder) => {\n  const color = hasFeature ? '#4CAF50' : '#9E9E9E';\n  return `<span style=\"color: ${color}; margin-right: 5px;\">${iconPlaceholder}</span>`;\n};\nconst determinePlanetTier = buildRequirements => {\n  const tier4 = ['TSH'];\n  const tier3 = ['MGC', 'BL', 'HSE', 'INS'];\n  const tier2 = ['SEA'];\n  for (const requirement of buildRequirements) {\n    const ticker = requirement.MaterialTicker;\n    if (tier4.includes(ticker)) {\n      return 4;\n    } else if (tier3.includes(ticker)) {\n      return 3;\n    } else if (tier2.includes(ticker)) {\n      return 2;\n    }\n  }\n  return 1; // Default to tier 1 if no matches\n};\n\n// Function to create PlanetTier indicator\nconst createPlanetTierIndicator = tier => {\n  console.log('Planet Tier:', tier);\n  const maxTier = 4;\n  const filledStar = '★';\n  const emptyStar = '☆';\n  const stars = filledStar.repeat(maxTier - tier) + emptyStar.repeat(Math.max(0, tier - 1));\n  return `<div style=\"color: gold;\">${stars}</div>`;\n};\n\n// Function to create and show the info panel\nconst showInfoPanel = (rect, x, y) => {\n  const systemId = rect.attr('id').replace('#', '');\n  const system = universeData ? universeData[systemId] : null;\n  const planets = planetData ? planetData[systemId] : null;\n  if (!system || !planets) {\n    console.error('System or planet data not found for:', systemId);\n    return;\n  }\n  const infoPanel = d3.select('body').append('div').attr('class', 'info-panel').style('left', `${x}px`).style('top', `${y}px`).style('display', 'block');\n  let content = `<h3>${system.Name} (${system.NaturalId})</h3>`;\n  content += `<ul>`;\n  planets.forEach(planet => {\n    console.log('Planet Info:', planet.PlanetNaturalId, planet.PlanetTier);\n    let planetTier = determinePlanetTier(planet.BuildRequirements);\n    content += `<li>\n      <strong>${planet.PlanetName} (${planet.PlanetNaturalId})</strong><br>\n      ${createPlanetTierIndicator(planetTier)}\n      <div>\n        ${createFacilityIndicator(planet.HasLocalMarket, '🏪')}\n        ${createFacilityIndicator(planet.HasChamberOfCommerce, '🏛️')}\n        ${createFacilityIndicator(planet.HasWarehouse, '🏭')}\n        ${createFacilityIndicator(planet.HasAdministrationCenter, '🏢')}\n        ${createFacilityIndicator(planet.HasShipyard, '🚀')}\n      </div>`;\n    if (planet.COGCProgramStatus === \"ACTIVE\" && planet.COGCPrograms && planet.COGCPrograms.length > 0) {\n      content += `<div>CoGC: ${planet.COGCPrograms[0].ProgramType}</div>`;\n    }\n    content += `</li>`;\n  });\n  content += `</ul>`;\n  infoPanel.html(content);\n};\n\n// Function to hide the info panel\nconst hideInfoPanel = () => {\n  d3.select('.info-panel').remove();\n};\n\n// Function to add mouseover and mouseout events for animation\nexport const addMouseEvents = g => {\n  g.selectAll('rect').each(function () {\n    const rect = d3.select(this);\n    const originalSize = {\n      width: +rect.attr('width'),\n      height: +rect.attr('height')\n    };\n    const originalPos = {\n      x: +rect.attr('x'),\n      y: +rect.attr('y')\n    };\n    let hoverTimer;\n    rect.on('mouseover', function (event) {\n      if (rect.attr('id') === 'rect1') return;\n      rect.attr('fill-opacity', 1).attr('stroke-opacity', 1).transition().duration(200).attr('width', originalSize.width * 2).attr('height', originalSize.height * 2).attr('x', originalPos.x - originalSize.width / 2).attr('y', originalPos.y - originalSize.height / 2);\n\n      // Set timer for info panel\n      hoverTimer = setTimeout(() => {\n        const [x, y] = d3.pointer(event);\n        showInfoPanel(rect, x, y);\n      }, 400);\n    }).on('mouseout', function () {\n      if (rect.attr('id') === 'rect1') return;\n      rect.transition().duration(200).attr('width', originalSize.width).attr('height', originalSize.height).attr('x', originalPos.x).attr('y', originalPos.y).attr('fill-opacity', colors.resetSystemFillOpacity);\n\n      // Clear timer and hide info panel\n      clearTimeout(hoverTimer);\n      hideInfoPanel();\n    });\n  });\n};","map":{"version":3,"names":["d3","colors","universeData","planetData","fetchData","universeResponse","planetResponse","Promise","all","fetch","universeJson","json","planetJson","Object","fromEntries","map","system","SystemId","reduce","acc","planet","push","console","log","error","normalizeElementStyles","element","style","attrib","get","styleDict","split","filter","Boolean","item","str","trim","key","value","entries","setAttribute","removeAttribute","createFacilityIndicator","hasFeature","iconPlaceholder","color","determinePlanetTier","buildRequirements","tier4","tier3","tier2","requirement","ticker","MaterialTicker","includes","createPlanetTierIndicator","tier","maxTier","filledStar","emptyStar","stars","repeat","Math","max","showInfoPanel","rect","x","y","systemId","attr","replace","planets","infoPanel","select","append","content","Name","NaturalId","forEach","PlanetNaturalId","PlanetTier","planetTier","BuildRequirements","PlanetName","HasLocalMarket","HasChamberOfCommerce","HasWarehouse","HasAdministrationCenter","HasShipyard","COGCProgramStatus","COGCPrograms","length","ProgramType","html","hideInfoPanel","remove","addMouseEvents","g","selectAll","each","originalSize","width","height","originalPos","hoverTimer","on","event","transition","duration","setTimeout","pointer","resetSystemFillOpacity","clearTimeout"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/utils/svgUtils.js"],"sourcesContent":["import * as d3 from 'd3';\nimport { colors } from '../config/config';\n\nlet universeData = null;\nlet planetData = null;\n\n// Function to fetch and process the universe and planet data\nconst fetchData = async () => {\n  try {\n    const [universeResponse, planetResponse] = await Promise.all([\n      fetch('/prun_universe_data.json'),\n      fetch('/planet_data.json')\n    ]);\n    const universeJson = await universeResponse.json();\n    const planetJson = await planetResponse.json();\n\n    universeData = Object.fromEntries(universeJson.map(system => [system.SystemId, system]));\n\n    // Group planets by SystemId\n    planetData = planetJson.reduce((acc, planet) => {\n      if (!acc[planet.SystemId]) {\n        acc[planet.SystemId] = [];\n      }\n      acc[planet.SystemId].push(planet);\n      return acc;\n    }, {});\n\n    console.log('Universe and planet data loaded');\n  } catch (error) {\n    console.error('Error loading data:', error);\n  }\n};\n\n// Call this function when the application initializes\nfetchData();\n\n// Function to normalize the style attribute\nexport const normalizeElementStyles = (element) => {\n  const style = element.attrib.get('style', '');\n  const styleDict = Object.fromEntries(style.split(';').filter(Boolean).map(item => item.split(':').map(str => str.trim())));\n\n  for (const [key, value] of Object.entries(styleDict)) {\n    element.setAttribute(key, value);\n  }\n\n  element.removeAttribute('style');\n};\n\n// Function to create facility indicator\nconst createFacilityIndicator = (hasFeature, iconPlaceholder) => {\n  const color = hasFeature ? '#4CAF50' : '#9E9E9E';\n  return `<span style=\"color: ${color}; margin-right: 5px;\">${iconPlaceholder}</span>`;\n};\n\n const determinePlanetTier = (buildRequirements) => {\n  const tier4 = ['TSH'];\n  const tier3 = ['MGC', 'BL', 'HSE', 'INS'];\n  const tier2 = ['SEA'];\n\n  for (const requirement of buildRequirements) {\n    const ticker = requirement.MaterialTicker;\n    if (tier4.includes(ticker)) {\n      return 4;\n    } else if (tier3.includes(ticker)) {\n      return 3;\n    } else if (tier2.includes(ticker)) {\n      return 2;\n    }\n  }\n\n  return 1; // Default to tier 1 if no matches\n};\n\n// Function to create PlanetTier indicator\nconst createPlanetTierIndicator = (tier) => {\n  console.log('Planet Tier:', tier);\n  const maxTier = 4;\n  const filledStar = '★';\n  const emptyStar = '☆';\n  const stars = filledStar.repeat(maxTier - tier) + emptyStar.repeat(Math.max(0, tier-1));\n  return `<div style=\"color: gold;\">${stars}</div>`;\n};\n\n// Function to create and show the info panel\nconst showInfoPanel = (rect, x, y) => {\n  const systemId = rect.attr('id').replace('#', '');\n  const system = universeData ? universeData[systemId] : null;\n  const planets = planetData ? planetData[systemId] : null;\n\n  if (!system || !planets) {\n    console.error('System or planet data not found for:', systemId);\n    return;\n  }\n\n  const infoPanel = d3.select('body').append('div')\n    .attr('class', 'info-panel')\n    .style('left', `${x}px`)\n    .style('top', `${y}px`)\n    .style('display', 'block');\n\n  let content = `<h3>${system.Name} (${system.NaturalId})</h3>`;\n  content += `<ul>`;\n\n  planets.forEach(planet => {\n    console.log('Planet Info:', planet.PlanetNaturalId, planet.PlanetTier);\n    let planetTier = determinePlanetTier(planet.BuildRequirements)\n    content += `<li>\n      <strong>${planet.PlanetName} (${planet.PlanetNaturalId})</strong><br>\n      ${createPlanetTierIndicator(planetTier)}\n      <div>\n        ${createFacilityIndicator(planet.HasLocalMarket, '🏪')}\n        ${createFacilityIndicator(planet.HasChamberOfCommerce, '🏛️')}\n        ${createFacilityIndicator(planet.HasWarehouse, '🏭')}\n        ${createFacilityIndicator(planet.HasAdministrationCenter, '🏢')}\n        ${createFacilityIndicator(planet.HasShipyard, '🚀')}\n      </div>`;\n    if (planet.COGCProgramStatus === \"ACTIVE\" && planet.COGCPrograms && planet.COGCPrograms.length > 0) {\n      content += `<div>CoGC: ${planet.COGCPrograms[0].ProgramType}</div>`;\n    }\n    content += `</li>`;\n  });\n\n  content += `</ul>`;\n  infoPanel.html(content);\n};\n\n// Function to hide the info panel\nconst hideInfoPanel = () => {\n  d3.select('.info-panel').remove();\n};\n\n// Function to add mouseover and mouseout events for animation\nexport const addMouseEvents = (g) => {\n  g.selectAll('rect').each(function() {\n    const rect = d3.select(this);\n    const originalSize = { width: +rect.attr('width'), height: +rect.attr('height') };\n    const originalPos = { x: +rect.attr('x'), y: +rect.attr('y') };\n    let hoverTimer;\n\n    rect.on('mouseover', function(event) {\n      if (rect.attr('id') === 'rect1') return;\n      rect\n        .attr('fill-opacity', 1)\n        .attr('stroke-opacity', 1)\n        .transition()\n        .duration(200)\n        .attr('width', originalSize.width * 2)\n        .attr('height', originalSize.height * 2)\n        .attr('x', originalPos.x - originalSize.width / 2)\n        .attr('y', originalPos.y - originalSize.height / 2);\n\n      // Set timer for info panel\n      hoverTimer = setTimeout(() => {\n        const [x, y] = d3.pointer(event);\n        showInfoPanel(rect, x, y);\n      }, 400);\n\n    }).on('mouseout', function() {\n      if (rect.attr('id') === 'rect1') return;\n      rect.transition()\n        .duration(200)\n        .attr('width', originalSize.width)\n        .attr('height', originalSize.height)\n        .attr('x', originalPos.x)\n        .attr('y', originalPos.y)\n        .attr('fill-opacity', colors.resetSystemFillOpacity);\n\n      // Clear timer and hide info panel\n      clearTimeout(hoverTimer);\n      hideInfoPanel();\n    });\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}