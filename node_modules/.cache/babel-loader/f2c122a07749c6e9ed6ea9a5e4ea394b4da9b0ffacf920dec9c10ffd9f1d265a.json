{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport fetchGraphData from './useFetchGraphData';\nconst useGraphState = () => {\n  _s();\n  const [graph, setGraph] = useState({\n    nodes: {},\n    edges: []\n  });\n  const fetchGraphDataCallback = useCallback(async () => {\n    const data = await fetchGraphData();\n    setGraph(data);\n  }, []);\n  return {\n    graph,\n    fetchGraphData: fetchGraphDataCallback\n  };\n};\n_s(useGraphState, \"EbFhrRxJ+nDzXg16KqKhDSK8lz0=\");\nexport default useGraphState;","map":{"version":3,"names":["useState","useCallback","fetchGraphData","useGraphState","_s","graph","setGraph","nodes","edges","fetchGraphDataCallback","data"],"sources":["/home/admin_user/PycharmProjects/StarMap_PrUn/prun-universe-map/src/hooks/useGraphState.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport fetchGraphData from './useFetchGraphData';\n\nconst useGraphState = () => {\n  const [graph, setGraph] = useState({ nodes: {}, edges: [] });\n\n  const fetchGraphDataCallback = useCallback(async () => {\n    const data = await fetchGraphData();\n    setGraph(data);\n  }, []);\n\n  return {\n    graph,\n    fetchGraphData: fetchGraphDataCallback,\n  };\n};\n\nexport default useGraphState;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,cAAc,MAAM,qBAAqB;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAAEO,KAAK,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAE5D,MAAMC,sBAAsB,GAAGR,WAAW,CAAC,YAAY;IACrD,MAAMS,IAAI,GAAG,MAAMR,cAAc,CAAC,CAAC;IACnCI,QAAQ,CAACI,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLL,KAAK;IACLH,cAAc,EAAEO;EAClB,CAAC;AACH,CAAC;AAACL,EAAA,CAZID,aAAa;AAcnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}